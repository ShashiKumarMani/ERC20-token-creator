{"version":3,"sources":["App.js","index.js"],"names":["web3","accounts","regex","RegExp","App","useState","name","setName","symbol","setSymbol","decimals","setDecimals","supply","setSupply","error","setError","contractAddress","setContractAddress","txHash","setTxHash","e","a","console","log","preventDefault","contract","eth","Contract","SimpleToken","abi","deploy","data","bytecode","arguments","send","from","message","tx","options","address","test","target","value","useEffect","window","ethereum","request","method","Web3","init","className","onSubmit","id","type","placeholder","onChange","decimalChange","supplyChange","style","display","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"42sZAMIA,EAEAC,E,uGADAC,EAAQC,OAAO,YA2FJC,MAxFf,WAAgB,IAAD,EAEWC,mBAAS,IAFpB,mBAENC,EAFM,KAEAC,EAFA,OAGeF,mBAAS,IAHxB,mBAGNG,EAHM,KAGEC,EAHF,OAImBJ,mBAAS,IAJ5B,mBAINK,EAJM,KAIIC,EAJJ,OAKeN,mBAAS,IALxB,mBAKNO,EALM,KAKEC,EALF,OAMaR,mBAAS,IANtB,mBAMNS,EANM,KAMCC,EAND,OAOiCV,mBAAS,IAP1C,mBAONW,EAPM,KAOWC,EAPX,OAQeZ,mBAAS,IARxB,mBAQNa,EARM,KAQEC,EARF,iDA0Bb,WAA4BC,GAA5B,iBAAAC,EAAA,6DACEC,QAAQC,IAAI,gBACZH,EAAEI,iBAFJ,SAOIC,EAAW,IAAIzB,EAAK0B,IAAIC,SAASC,EAAYC,KAPjD,SAQeJ,EAASK,OAAO,CACzBC,KAAOH,EAAYI,SACnBC,UAAY,CAAC3B,EAAME,EAAQE,EAAUE,KAEtCsB,KAAK,CAACC,KAAOlC,EAAS,KAAK,SAACa,EAAOI,GAC7BJ,EACDC,EAASD,EAAMsB,SAEfjB,EAAUD,MAhBpB,OAQImB,EARJ,OAmBItB,EAAS,IACTE,EAAmBoB,EAAGC,QAAQC,SApBlC,kDAsBIxB,EAAS,KAAMqB,SAtBnB,0DA1Ba,oEAoDb,WAA6BhB,GAA7B,SAAAC,EAAA,sDAEKnB,EAAMsC,KAAKpB,EAAEqB,OAAOC,QACrB/B,EAAYS,EAAEqB,OAAOC,OACrB3B,EAAS,KAETA,EAAS,iBANb,4CApDa,kEA8Db,WAA4BK,GAA5B,SAAAC,EAAA,sDACKnB,EAAMsC,KAAKpB,EAAEqB,OAAOC,QACrB7B,EAAUO,EAAEqB,OAAOC,OACnB3B,EAAS,KAETA,EAAS,iBALb,4CA9Da,sBAuEb,OA7DA4B,qBAAU,WAAM,4CAEZ,sBAAAtB,EAAA,0DACGuB,OAAOC,SADV,iCAEQD,OAAOC,SAASC,QAAQ,CAAEC,OAAS,wBAF3C,uBAGmBH,OAAOC,SAASC,QAAQ,CAAEC,OAAS,iBAHtD,OAGE9C,EAHF,OAIEqB,QAAQC,IAAItB,GACZD,EAAO,IAAIgD,IAAKJ,OAAOC,UALzB,wBAQEvB,QAAQC,IAAI,oBARd,6CAFY,uBAAC,WAAD,wBAad0B,KACC,IAgDD,sBAAKC,UAAU,MAAMC,SAxEV,4CAwEX,UACE,qDACA,uBAAMD,UAAU,cAAhB,UACE,uBAAOE,GAAG,OAAOC,KAAK,OAAOC,YAAY,OAAOC,SAAU,SAAAnC,GAAC,OAAIb,EAAQa,EAAEqB,OAAOC,UAChF,uBAAOU,GAAG,OAAOC,KAAK,OAAOC,YAAY,SAASC,SAAU,SAAAnC,GAAC,OAAIX,EAAUW,EAAEqB,OAAOC,UACpF,uBAAOU,GAAG,OAAOC,KAAK,OAAOC,YAAY,WAAWC,SAAU,SAAAnC,GAAC,OA7ExD,2CA6E4DoC,CAAcpC,MACjF,uBAAOgC,GAAG,OAAOC,KAAK,OAAOC,YAAY,eAAeC,SAAU,SAAAnC,GAAC,OA9E5D,2CA8EgEqC,CAAarC,MACpF,wBAAQiC,KAAK,SAAb,uBAEF,sBAAKK,MAAO,CAACC,QAAU7C,EAAQ,QAAU,QAAzC,qBAA2DA,KAC3D,sBAAKoC,UAAU,UAAUQ,MAAO,CAACC,QAAU3C,EAAkB,QAAU,QAAvE,gCAAoGA,KACpG,sBAAKkC,UAAU,mBAAmBQ,MAAO,CAACC,QAAUzC,EAAS,QAAU,QAAvE,mCAAuGA,SCzF7G0C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.dc4394a9.chunk.js","sourcesContent":["// Ref : https://web3js.readthedocs.io/en/v1.2.11/web3-eth-contract.html#deploy\n\nimport { useEffect, useState } from 'react';\nimport Web3 from 'web3';\nimport SimpleToken from './build/contracts/SimpleToken.json';\n\nlet web3;\nlet regex = RegExp('^[0-9]+$');\nlet accounts;\n\nfunction App() {\n\n  const [name, setName] = useState('');\n  const [symbol, setSymbol] = useState('');\n  const [decimals, setDecimals] = useState('');\n  const [supply, setSupply] = useState('');\n  const [error, setError] = useState('');\n  const [contractAddress, setContractAddress] = useState('');\n  const [txHash, setTxHash] = useState('');\n  \n  useEffect(() => {\n      \n      async function init() {\n      if(window.ethereum) {\n        await window.ethereum.request({ method : 'eth_requestAccounts'});\n        accounts = await window.ethereum.request({ method : 'eth_accounts'});\n        console.log(accounts);  \n        web3 = new Web3(window.ethereum);\n\n      } else {\n        console.log('Install MetaMask');\n      }\n    }\n    init();\n  }, []);\n\n  async function handleSubmit(e) {\n    console.log('Handlesubmit');\n    e.preventDefault();\n    let contract;\n    let tx;\n\n    try {\n      contract = new web3.eth.Contract(SimpleToken.abi);\n      tx = await contract.deploy({\n        data : SimpleToken.bytecode, \n        arguments : [name, symbol, decimals, supply]\n      })\n      .send({from : accounts[0]}, (error, txHash) => {\n          if(error) {\n            setError(error.message);\n          } else {\n            setTxHash(txHash);\n          }\n      });\n      setError('');\n      setContractAddress(tx.options.address);\n    } catch(error) {\n      setError(error.message);\n    }\n  }\n\n  async function decimalChange(e) {\n\n    if(regex.test(e.target.value)) {\n      setDecimals(e.target.value);\n      setError('');\n    } else {\n      setError('Enter numbers');\n    }\n  }\n\n  async function supplyChange(e) {\n    if(regex.test(e.target.value)) {\n      setSupply(e.target.value);\n      setError('');\n    } else {\n      setError('Enter numbers');\n    }\n  }\n\n  return (\n    <div className=\"App\" onSubmit={handleSubmit}>\n      <h1>ERC20 Token Creator</h1>\n      <form className=\"create-form\">\n        <input id=\"name\" type=\"text\" placeholder=\"Name\" onChange={e => setName(e.target.value)}/>\n        <input id=\"name\" type=\"text\" placeholder=\"Symbol\" onChange={e => setSymbol(e.target.value)}/>\n        <input id=\"name\" type=\"text\" placeholder=\"Decimals\" onChange={e => decimalChange(e)}/>\n        <input id=\"name\" type=\"text\" placeholder=\"Total Supply\" onChange={e => supplyChange(e)}/>\n        <button type=\"submit\">Create</button>\n      </form>\n      <div style={{display : error ? 'block' : 'none'}}>ERROR : {error}</div>\n      <div className=\"tx-hash\" style={{display : contractAddress ? 'block' : 'none'}}>Contract Address : {contractAddress}</div>\n      <div className=\"contract-address\" style={{display : txHash ? 'block' : 'none'}}>Transaction Address : {txHash}</div>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}